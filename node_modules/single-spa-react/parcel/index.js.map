{"version":3,"sources":["../src/parcel.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/* This import statement requires a peer or dev dependency on react that is fulfilled at runtime.\n * To avoid duplicate bundling of react, we do not do this inside of single-spa-react.js.\n * We also do not set up the prop types in this file to avoid requiring the user of the library\n * to have prop-types installed and in their browser bundle, since not everyone uses prop types.\n */\nimport React from 'react'\nimport {SingleSpaContext} from '../lib/single-spa-react.js'\n\nexport default class Parcel extends React.Component {\n  static defaultProps = {\n    wrapWith: 'div'\n  }\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      hasError: false,\n    }\n\n    if (!props.config) {\n      throw new Error(`single-spa-react's Parcel component requires the 'config' prop to either be a parcel config or a loading function that returns a promise. See https://github.com/CanopyTax/single-spa-react`)\n    }\n  }\n  componentDidMount() {\n    this.addThingToDo('mount', () => {\n      const mountParcel = this.props.mountParcel || this.mountParcel\n      if (!mountParcel) {\n        throw new Error(`<Parcel /> was not passed a mountParcel prop, nor is it rendered where mountParcel is within the React context`)\n      }\n      let domElement;\n      if (this.el) {\n        domElement = this.el\n      } else {\n        this.createdDomElement = domElement = document.createElement(this.props.wrapWith)\n        this.props.appendTo.appendChild(domElement)\n      }\n      this.parcel = mountParcel(this.props.config, {domElement, ...this.getParcelProps()})\n      return this.parcel.mountPromise\n    })\n  }\n  componentDidUpdate() {\n    this.addThingToDo('update', () => {\n      if (this.parcel && this.parcel.update) {\n        return this.parcel.update(this.getParcelProps())\n      }\n    })\n  }\n  componentWillUnmount() {\n    this.addThingToDo('unmount', () => {\n      if (this.parcel && this.parcel.getStatus() === \"MOUNTED\") {\n        return this.parcel.unmount()\n      }\n    })\n\n    if (this.createdDomElement) {\n      this.createdDomElement.parentNode.removeChild(this.createdDomElement)\n    }\n\n    this.unmounted = true\n  }\n  render() {\n    if (this.props.appendTo) {\n      if (SingleSpaContext && SingleSpaContext.Consumer) {\n        return (\n          <SingleSpaContext.Consumer>\n            {({mountParcel}) => {\n              this.mountParcel = mountParcel\n\n              return null\n            }}\n          </SingleSpaContext.Consumer>\n        )\n      } else {\n        return null\n      }\n    } else {\n      const reactElement = React.createElement(this.props.wrapWith, {ref: this.handleRef})\n\n      if (SingleSpaContext && SingleSpaContext.Consumer) {\n        return (\n          <SingleSpaContext.Consumer>\n            {({mountParcel}) => {\n              this.mountParcel = mountParcel\n\n              return reactElement\n            }}\n          </SingleSpaContext.Consumer>\n        )\n      } else {\n        // react@<16.3, or not being rendered within a single-spa application\n        return reactElement\n      }\n    }\n  }\n  handleRef = el => {\n    this.el = el\n  }\n  addThingToDo = (action, thing) => {\n    if (this.state.hasError && action !== 'unmount') {\n      // In an error state, we don't do anything anymore except for unmounting\n      return\n    }\n\n    this.nextThingToDo = (this.nextThingToDo || Promise.resolve())\n      .then((...args) => {\n        if (this.unmounted && action !== 'unmount') {\n          // Never do anything once the react component unmounts\n          return\n        }\n\n        return thing(...args)\n      })\n      .catch(err => {\n        this.nextThingToDo = Promise.resolve() // reset so we don't .then() the bad promise again\n        this.setState({hasError: true})\n\n        if (err && err.message) {\n          err.message = `During '${action}', parcel threw an error: ${err.message}`\n        }\n\n        if (this.props.handleError) {\n          this.props.handleError(err)\n        } else {\n          setTimeout(() => {throw err})\n        }\n\n        // No more things to do should be done -- the parcel is in an error state\n        throw err\n      })\n  }\n  getParcelProps = () => {\n    const parcelProps = Object.assign({}, this.props)\n\n    delete parcelProps.mountParcel\n    delete parcelProps.config\n    delete parcelProps.wrapWith\n    delete parcelProps.appendTo\n    delete parcelProps.handleError\n\n    return parcelProps\n  }\n}\n"]}